{"remainingRequest":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/frostace/Documents/GitHub/December-UI/december-ui/src/components/Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/src/components/Dropdown.vue","mtime":1590114647196},{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frostace/Documents/GitHub/December-UI/december-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogImRyb3Bkb3duIiwKICAgIGNvbXB1dGVkOiBtYXBHZXR0ZXJzKFsibGFuZ3VhZ2VzIl0pLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzZWxlY3RlZDogIkVuZ2xpc2giLAogICAgICAgICAgICAvLyBXaGV0aGVyIHRoZSBvcHRpb25zIGFyZSB2aXNpYmxlIG9yIG5vdC4KICAgICAgICAgICAgaXNPcGVuOiBmYWxzZSwKICAgICAgICAgICAgLy8gVGhlIHNlbGVjdGVkIHZhbHVlLgogICAgICAgIH07CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHRvZ2dsZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMuaXNPcGVuID0gIXRoaXMuaXNPcGVuOwogICAgICAgIH0sCiAgICAgICAgc2hvdzogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIGhpZGU6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgLy8gU2V0IG9wdGlvbiBhcyBzZWxlY3RlZCBzdGF0ZSBhbmQgY2xvc2UgZHJvcGRvd24uCiAgICAgICAgc2V0OiBmdW5jdGlvbihvcHRpb24pIHsKICAgICAgICAgICAgY29uc29sZS5sb2cob3B0aW9uKTsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IG9wdGlvbjsKICAgICAgICAgICAgdGhpcy5oaWRlKCk7CiAgICAgICAgfSwKICAgIH0sCiAgICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgICAgICBjb25zb2xlLmxvZygiTXkgZHJvcGRvd24gY29tcG9uZW50IGlzIG1vdW50ZWQhIik7CiAgICB9LAp9Owo="},{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"dropdown\">\n        <!-- On click we call the toggle method -->\n        <div class=\"selected\" @click=\"toggle\">{{ selected }}</div>\n        <div class=\"options\" v-show=\"isOpen\">\n            <!-- v-for loops trough `options` -->\n            <!-- and renders a div containing the `option`s value. -->\n            <div\n                class=\"option\"\n                v-bind:key=\"language\"\n                v-for=\"language in languages\"\n                @click=\"set(language)\"\n            >\n                {{ language }}\n            </div>\n        </div>\n\n        <!-- TODO: can be modified so that it's under ::after property -->\n        <font-awesome-icon icon=\"chevron-down\" size=\"xs\" />\n    </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n    name: \"dropdown\",\n    computed: mapGetters([\"languages\"]),\n    data() {\n        return {\n            selected: \"English\",\n            // Whether the options are visible or not.\n            isOpen: false,\n            // The selected value.\n        };\n    },\n    methods: {\n        toggle: function() {\n            this.isOpen = !this.isOpen;\n        },\n        show: function() {\n            this.isOpen = true;\n        },\n        hide: function() {\n            this.isOpen = false;\n        },\n        // Set option as selected state and close dropdown.\n        set: function(option) {\n            console.log(option);\n            this.selected = option;\n            this.hide();\n        },\n    },\n    mounted: function() {\n        console.log(\"My dropdown component is mounted!\");\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$green: #38ada9;\n$black: #2c3e50;\n\n#dropdown {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    font-weight: lighter;\n    position: relative;\n    height: 4rem;\n    width: 5rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    .selected {\n        margin-right: 5px;\n    }\n\n    // .selected:before {\n    //     content: <i class= \"far fa-language\" ></i>;\n    // }\n\n    .options {\n        position: absolute;\n        left: calc(0% - 7.5px);\n        top: 100%;\n        z-index: 1;\n        width: 120%;\n        border: solid 1px #ccc;\n        transition: ease-in-out;\n        padding: 10px 0;\n        background-color: #fff;\n        box-shadow: 1px 1px #ccc;\n        .option {\n            padding: 5px 15px;\n        }\n        .option:hover {\n            color: $green;\n            background-color: lighten($green, 50%);\n        }\n    }\n    font-awesome-icon {\n        margin-left: 5px;\n        font-size: 1px;\n    }\n}\n\n// .dropdown-content {\n//     display: none;\n//     position: absolute;\n//     background-color: #f9f9f9;\n//     min-width: 160px;\n//     box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n//     padding: 12px 16px;\n//     z-index: 1;\n// }\n\n* {\n    font-weight: bold;\n}\n\n.dropdown:hover .dropdown-content {\n    display: block;\n}\n</style>\n"]}]}